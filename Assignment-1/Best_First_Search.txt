from queue import PriorityQueue

def best_search(graph, start, goal):
    visited = set()
    pq = PriorityQueue()
    pq.put((0, start))

    while pq:
        cost, node = pq.get()
        print(node, end=' ')

        if node == goal:
            print('\nGoal Reached')
            break

        if node not in visited:
            visited.add(node)

        for neighbor, neighbor_cost in graph[node]:
            pq.put((neighbor_cost, neighbor))

    if node != goal:
        print('\nGoal Not Reached')

graph = {
    'A' : [('B', 5), ('C', 7)],
    'B' : [('D', 9)],
    'C' : [('E', 3)],
    'D' : [('F', 12)],
    'E' : [('G', 2)],
    'F' : [('G', 1)],
    'G' : []
}

start = 'A'
goal = 'G'
best_search(graph, start, goal)
